{"version":3,"sources":["api.ts","components/PageNavLink.tsx","components/Loader/Loader.tsx","components/RenderParentLink.tsx","components/PersonComponent.tsx","components/PersonTable.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageNavLink","to","navText","navigate","useNavigate","className","isActive","classNames","onClick","Loader","RenderParentLink","parentName","peopleState","parent","find","p","name","slug","sex","PersonComponent","personName","person","chosenPerson","useParams","born","died","motherName","fatherName","PersonTable","error","loading","length","map","App","useState","setPeopleState","setError","setLoading","location","useLocation","useEffect","pathname","result","catch","finally","replace","role","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.af598b87.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport React from 'react';\n\ntype Props = {\n  to: string,\n  navText: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, navText }) => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    if (to === '/') {\n      navigate('/');\n    } else {\n      navigate(`/${to}`);\n    }\n  };\n\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n      onClick={handleClick}\n    >\n      {navText}\n    </NavLink>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nexport type Props = {\n  parentName: string | null;\n  peopleState: Person[];\n};\n\nexport const RenderParentLink: React.FC<Props> = ({\n  parentName, peopleState,\n}) => {\n  let parent: Person | null = null;\n\n  if (parentName) {\n    parent = peopleState.find(p => p.name === parentName) || null;\n  }\n\n  return (\n    <td>\n      {parent ? (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={classNames({ 'has-text-danger': parent.sex === 'f' })}\n        >\n          {parent.name}\n        </Link>\n      ) : (\n        '-'\n      )}\n    </td>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { RenderParentLink } from './RenderParentLink';\nimport { Person } from '../types/Person';\n\ntype PersonProps = {\n  peopleState: Person[],\n  person: Person,\n};\n\nexport const PersonComponent: React.FC<PersonProps> = ({\n  peopleState, person,\n}) => {\n  const { chosenPerson } = useParams<{ chosenPerson: string; }>();\n  const isChosen = (personName: string) => personName === chosenPerson;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        'has-background-warning': isChosen(person.slug),\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <RenderParentLink\n        parentName={person.motherName}\n        peopleState={peopleState}\n      />\n      <RenderParentLink\n        parentName={person.fatherName}\n        peopleState={peopleState}\n      />\n    </tr>\n  );\n};\n","import { Loader } from './Loader';\nimport { Person } from '../types/Person';\nimport { PersonComponent } from './PersonComponent';\n\nexport type Props = {\n  peopleState: Person[],\n  error: boolean,\n  loading: boolean,\n};\n\nexport const PersonTable: React.FC<Props> = ({\n  peopleState, error, loading,\n}) => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {!loading && error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && !error && peopleState.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {!loading && !error && peopleState.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peopleState.map(person => (\n                  <PersonComponent\n                    key={person.slug}\n                    peopleState={peopleState}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate, Route, Routes, useLocation,\n} from 'react-router-dom';\nimport './App.scss';\nimport {\n  useEffect, useState,\n} from 'react';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { PageNavLink } from './components/PageNavLink';\nimport { PersonTable } from './components/PersonTable';\n\nexport const App: React.FC = () => {\n  const [peopleState, setPeopleState] = useState<Person[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === '/people') {\n      setLoading(true);\n      getPeople()\n        .then((result) => setPeopleState(result))\n        .catch(() => setError(true))\n        .finally(() => setLoading(false));\n    }\n  }, [location]);\n\n  if (location.pathname === '/home') {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" navText=\"Home\" />\n            <PageNavLink to=\"/people\" navText=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={(\n                  <PersonTable\n                    peopleState={peopleState}\n                    error={error}\n                    loading={loading}\n                  />\n                )}\n              />\n              <Route\n                path=\":chosenPerson\"\n                element={(\n                  <PersonTable\n                    peopleState={peopleState}\n                    error={error}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Route>\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}